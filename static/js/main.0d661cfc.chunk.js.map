{"version":3,"sources":["images/Loading_Spinner.gif","images/field.jpg","App.js","index.js"],"names":["module","exports","details","leagueTypes","flexPositions","allPositions","App","useState","fullPlayerList","setFullPlayerList","showRosterSelect","setShowRosterSelect","filteredPlayerList","setFilteredPlayerList","search","query","noResults","setNoResults","RB","QB","WR","TE","FLEX","K","DEF","Total","Bench","currentRoster","setCurrentRoster","type","rosterDetails","setRosterDetails","addedPlayerDetails","setAddedPlayerDetails","loading","setLoading","setHasError","startPage","setStartPage","currentSelected","setCurrentSelected","useEffect","fetch","then","res","a","json","playerList","sort","playerA","playerB","standardRanking","catch","e","handleInputChange","newList","filter","player","this","count","displayName","toLowerCase","includes","currentTarget","value","length","modifyRoster","currentPlayer","action","newRoster","newDetails","push","rankingType","forEach","position","renderPlayerCard","location","className","style","id","onClick","onMouseEnter","window","screen","width","backgroundColor","onMouseLeave","src","profileImg","team","placeholder","onChange","Dropdown","text","icon","Menu","scrolling","map","pos","Item","key","index","LoadingSpinner","Modal","onClose","onOpen","open","trigger","size","Header","Content","Description","item","detail","leagueType","Actions","Button","positive","massive","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d661cfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Loading_Spinner.79afee20.gif\";","module.exports = __webpack_public_path__ + \"static/media/field.9fcf0c07.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport LoadingSpinner from './images/Loading_Spinner.gif'\r\nimport fieldImg from './images/field.jpg'\r\nimport { Modal, Button, Dropdown, BreadcrumbDivider } from 'semantic-ui-react'\r\nimport { render } from 'react-dom'\r\n\r\nconst details = ['type', 'RB', 'QB', 'WR', 'TE', 'FLEX', 'K', 'DEF', 'Total', 'Bench']\r\nconst leagueTypes = [\"Standard\", \"PPR\"]\r\nconst flexPositions = [\"WR\", \"TE\", \"RB\"]\r\nconst allPositions = ['QB', 'WR', 'RB', 'TE', 'FLEX', 'K', 'DEF', 'Bench']\r\nconst specialDetails = ['type', 'Total', 'Bench']\r\n\r\nfunction App() {\r\n\r\n    const [fullPlayerList, setFullPlayerList] = useState([])\r\n    const [showRosterSelect, setShowRosterSelect] = useState(false)\r\n    const [filteredPlayerList, setFilteredPlayerList] = useState([])\r\n    const [noResults, setNoResults] = useState({search: false, query: ''})\r\n    const [currentRoster, setCurrentRoster] = useState({RB: [], QB: [], WR: [], TE: [], FLEX: [], K: [], DEF: [], Total: [], Bench: []})\r\n    const [rosterDetails, setRosterDetails] = useState({type: 'Standard', QB: 1, RB: 2, WR: 2, TE: 1, FLEX: 2, DEF: 1, K: 1, Total: 15, Bench: 5})\r\n    const [addedPlayerDetails, setAddedPlayerDetails] = useState({QB: 0, RB: 0, WR: 0, TE: 0, FLEX: 0, DEF: 0, K: 0, Total: 0, Bench: 0})\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasError, setHasError] = useState(false)\r\n    const [startPage, setStartPage] = useState(true)\r\n    const [currentSelected, setCurrentSelected] = useState('')\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch('https://fflo-server.herokuapp.com/players/loadInitial').then(\r\n            async(res) => {\r\n                let playerList = await res.json()\r\n\r\n                playerList.sort((playerA, playerB) => {\r\n                    return playerA.standardRanking - playerB.standardRanking\r\n                })\r\n\r\n                setFullPlayerList(playerList)\r\n                setLoading(false)\r\n            }\r\n        ).catch(e => {\r\n            setHasError(true)\r\n            setLoading(false)\r\n        })\r\n\r\n    }, [])\r\n\r\n    const handleInputChange = e => {\r\n        setNoResults({...noResults, search: false})\r\n        let newList = fullPlayerList.filter(function(player) {\r\n            if (this.count < 10 && player.displayName.toLowerCase().includes\r\n                (e.currentTarget.value.toLowerCase()))\r\n                {this.count ++\r\n                return true}\r\n        }, {count: 0})\r\n        if (newList.length === 0) {\r\n            setNoResults({...noResults, search: true, query: e.currentTarget.value})\r\n        }\r\n        setFilteredPlayerList(newList)\r\n    }\r\n    \r\n    const renderInputForm = () => {\r\n        return (\r\n            <div className = \"ui form\">\r\n                <input className = \"ui input\"\r\n                    placeholder=\"Begin typing a player name\"\r\n                    type=\"text\"\r\n                    onChange={handleInputChange}\r\n                >\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showStartPage = () => {\r\n        return (\r\n            <div className=\"startMenu\">\r\n                <div>\r\n                    <h1>Curated lineup reminders texted just in time!</h1>\r\n                </div>\r\n                <div className=\"startMenuButtons\">\r\n                    <div>\r\n                        <a\r\n                            onClick={() => setStartPage(false)}\r\n                        ><h3>Create New</h3></a>\r\n                    </div>\r\n                    <div>\r\n                        <a\r\n                            onClick={() => setStartPage(false)}\r\n                        ><h3>Edit Existing</h3></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRosterSelect = () => {\r\n\r\n        return (\r\n            <Modal\r\n              onClose={() => setShowRosterSelect(false)}\r\n              onOpen={() => setShowRosterSelect(true)}\r\n              open={showRosterSelect}\r\n              trigger={<p id=\"parametersChange\">Settings<i className=\"setting icon\"></i></p>}\r\n              size=\"tiny\"\r\n              //trigger={<Button primary small>Edit</Button>}\r\n            >\r\n              <Modal.Header>Roster Details</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                    <div className=\"ui form two column grid\">\r\n                        {details.filter(item => item !== \"Total\").map(detail => {\r\n                        if (detail === \"type\") {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"column four wide\">\r\n                                        {detail}\r\n                                    </div>\r\n                                    <div className=\"column twelve wide\">\r\n                                    {leagueTypes.map(leagueType => {\r\n                                        return (\r\n                                            <button className=\"ui button small blue\"\r\n                                            onClick = {e => {\r\n                                                e.currentTarget.style.backgroundColor=\"#21ba45\"\r\n                                                let newDetails = {...rosterDetails, type: leagueType}\r\n                                                setRosterDetails(newDetails)}\r\n                                            }>{leagueType}</button>\r\n                                        )\r\n                                    })}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"column four wide\">\r\n                                    {detail}\r\n                                </div>\r\n                                <div className=\"column twelve wide\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={rosterDetails[`${detail}`]}\r\n                                        onChange={(e) => {\r\n                                            let newDetails = {...rosterDetails, [detail]: e.currentTarget.value}\r\n                                            setRosterDetails(newDetails)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button onClick={() => setShowRosterSelect(false)} positive massive>\r\n                  Save Details\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          )\r\n\r\n\r\n    }\r\n\r\n    const renderFilter = () => {\r\n        return (\r\n            <Dropdown\r\n                text=\"Filter\"\r\n                icon=\"filter\"\r\n                className=\"icon\"\r\n            >\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Menu scrolling>\r\n                        {allPositions.map((pos) => {\r\n                            if (pos !== \"Bench\") {\r\n                                return (\r\n                                    <Dropdown.Item\r\n                                        key={pos}\r\n                                        text={pos}\r\n                                        onClick={() => {\r\n                                            setLoading(true)\r\n                                            if (pos === \"FLEX\") {\r\n                                                setFilteredPlayerList(fullPlayerList.filter((player) => flexPositions.includes(player.position)).filter((player, index) => index < 100))\r\n                                            } else {\r\n                                                setFilteredPlayerList(fullPlayerList.filter((player) => player.position === pos).filter((player, index) => index < 100))\r\n                                            }\r\n                                            setLoading(false)\r\n                                        }}\r\n                                />\r\n                                )\r\n                            }\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        )\r\n\r\n    }\r\n    const modifyRoster = (currentPlayer, action) => {\r\n\r\n        //recalculating each time\r\n        //total is the only sublist that gets kept\r\n        let newRoster = {...currentRoster, RB: [], QB: [], WR: [], TE: [], FLEX: [], K: [], DEF: [], Bench: []}\r\n        let newDetails = {QB: 0, RB: 0, WR: 0, TE: 0, FLEX: 0, DEF: 0, K: 0, Total: 0, Bench: 0}\r\n        \r\n        action === \"add\" ? newRoster.Total.push(currentPlayer) : newRoster.Total = newRoster.Total.filter(player => player !== currentPlayer)\r\n        \r\n        let rankingType = rosterDetails.type === \"Standard\" ? \"standardRanking\" : \"pprRanking\"\r\n        //sort players so highest ranked automatically get sent to starting positions\r\n        newRoster.Total.sort((playerA, playerB) => {return playerA[`${rankingType}`] - playerB[`${rankingType}`]} )\r\n\r\n        newRoster.Total.forEach(player => {\r\n\r\n            if (newDetails[`${player.position}`] >= rosterDetails[`${player.position}`]) {\r\n\r\n                if (flexPositions.includes(player.position) && newDetails.FLEX < rosterDetails.FLEX){\r\n                    newRoster.FLEX.push(player)\r\n                    newDetails.FLEX++\r\n                } else {\r\n                    newRoster.Bench.push(player)\r\n                    newDetails.Bench++\r\n                }\r\n            } else {\r\n                newRoster[`${player.position}`].push(player)\r\n                newDetails[`${player.position}`]++\r\n            }\r\n                newDetails.Total++\r\n            \r\n        })\r\n\r\n        setCurrentRoster(newRoster)\r\n        setAddedPlayerDetails(newDetails)\r\n\r\n    }\r\n\r\n    const renderPlayerCard = (player, location=\"mainSearch\") => {\r\n        if (location===\"mainSearch\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"playerSearchProfile\"\r\n                        style={{\"backgroundColor\": player.id === currentSelected ? \"lightgreen\" : \r\n                        currentRoster.Total.includes(player) ? \"#FFFFBA\" :\r\n                        '' }}\r\n                        onClick={e => {\r\n                            if (currentRoster.Total.includes(player)) {\r\n                                return}\r\n                            modifyRoster(player, 'add')\r\n                            setCurrentSelected(player.id)\r\n                            }}\r\n                        //only for desktop\r\n                        onMouseEnter={e => window.screen.width > 400 ? e.currentTarget.style.backgroundColor = \"gainsboro\" : ''}\r\n                        onMouseLeave={e => player.id !== currentSelected ? e.currentTarget.style.backgroundColor = \"\" : \"lightgreen\"}\r\n                        >\r\n                        <div>\r\n                            <img\r\n                            className='ui image tiny' \r\n                            src={player.profileImg}/>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                <b>{player.displayName}</b>\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                {player.id === currentSelected ? <div id=\"addedGraphic\">Added to roster!</div> : \r\n                                currentRoster.Total.includes(player) ? <div>Already in roster</div> : <div>{player.position} {player.team}</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )   \r\n        } else {\r\n            return (\r\n                <div className=\"ui segment raised\"\r\n                    onMouseEnter={e => e.currentTarget.style.backgroundColor = \"gainsboro\"}\r\n                    onMouseLeave={e => e.currentTarget.style.backgroundColor = \"\"}\r\n                    >\r\n                    <div style={{\"display\": \"flex\"}}>\r\n                        <img\r\n                        className='ui image tiny' \r\n                        src={player.profileImg}/>\r\n                        <i className=\"times icon large\"\r\n                            onClick={() => {\r\n                                modifyRoster(player, 'delete')\r\n                                setCurrentSelected('')\r\n                            }}>\r\n                        </i>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">\r\n                            {player.displayName}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )  \r\n\r\n        }\r\n    }\r\n    const renderLoadingGraphic = () => {\r\n        return (\r\n            <div className=\"loadingContainer\">\r\n                <img src={LoadingSpinner}/>\r\n                <h3>Loading Player List</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderPlayerList = () => {\r\n\r\n        if (noResults.search) {\r\n            return (\r\n                <div>\r\n                    No matching results for {noResults.query}\r\n                </div>\r\n            )\r\n        }\r\n        if (filteredPlayerList.length === 0) {\r\n            return (\r\n                <div>\r\n                    <div className=\"ui items\">\r\n                        {fullPlayerList.map((player, index) => {\r\n                            if (index < 100)\r\n                                return renderPlayerCard(player)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div className=\"ui items\">\r\n                        {filteredPlayerList.map((player, index) => {\r\n                            return renderPlayerCard(player)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const renderRoster = () => {\r\n        return (\r\n            allPositions.map((pos) => {\r\n                return ( \r\n                    <div className=\"rosterDisplayContainer\">\r\n                        <div className=\"currentRosterDisplay\"\r\n                        id=\"positionCounter\">\r\n                                <h2>{pos}<i className=\"check circle icon green\"\r\n                                style={{\"display\": addedPlayerDetails[`${pos}`] === rosterDetails[`${pos}`] ? \"inline-block\" : \"none\"}}\r\n                                    ></i></h2>\r\n                                <p>{addedPlayerDetails[`${pos}`]} of {rosterDetails[`${pos}`]} added</p>\r\n                                 \r\n                        </div>\r\n                        <div className=\"currentRosterDisplay\">\r\n                        {currentRoster[`${pos}`].map((player) => {\r\n                            return (\r\n                                <div className=\"ui item tiny\">\r\n                                {renderPlayerCard(player, \"sideBar\")}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n   \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"ui text container raised segment\">\r\n                { startPage ? showStartPage() : \r\n                <div className=\"ui two column grid stackable\"\r\n                    id=\"playerSearch\">\r\n                    <div className=\"column ten wide fullList\">\r\n                        <div>   \r\n                                <h3\r\n                                style={{\"marginBottom\": \"1vh\", \"textAlign\": \"center\"}}\r\n                                >Build/Edit Roster</h3>\r\n                                {renderInputForm()}\r\n                                <div id=\"playerListHeader\">\r\n                                    <h3>All Players</h3>\r\n                                    {renderFilter()}\r\n                                </div>\r\n                                {loading ? renderLoadingGraphic() : renderPlayerList()}\r\n                        </div>\r\n                        <div id=\"listSpacer\">\r\n                            {loading ? '' : <p>Click on a player to add</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column six wide\">\r\n                        <div id=\"searchOptions\">\r\n                            <h3>My Team:</h3>\r\n                            {renderRosterSelect()}\r\n                            <div>{addedPlayerDetails.Total} of {rosterDetails.Total} added</div>\r\n                        </div>\r\n                        <div id=\"rosterPositionContainer\">\r\n                            {renderRoster()}\r\n                        </div>\r\n                    </div>\r\n                </div> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div className=\"nav\">\r\n    <h1>FFLO</h1>\r\n    </div>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}