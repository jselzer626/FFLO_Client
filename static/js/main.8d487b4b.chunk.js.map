{"version":3,"sources":["images/Loading_Spinner.gif","App.js","index.js"],"names":["module","exports","details","leagueTypes","allPositions","App","useState","fullPlayerList","setFullPlayerList","showRosterSelect","setShowRosterSelect","filteredPlayerList","setFilteredPlayerList","search","query","noResults","setNoResults","currentRoster","setCurrentRoster","type","QB","RB","WR","TE","FLEX","DEF","K","Total","Bench","rosterDetails","setRosterDetails","addedPlayerDetails","setAddedPlayerDetails","handleInputChange","e","newList","filter","player","this","count","displayName","toLowerCase","includes","currentTarget","value","length","loadPlayerList","a","fetch","playerList","json","playerListJson","console","warn","renderRosterSelect","Modal","onClose","onOpen","open","trigger","Button","primary","small","Header","Content","Description","className","map","detail","leagueType","onClick","newDetails","onChange","parseInt","Actions","positive","massive","modifyRoster","currentPlayer","action","newRoster","push","requiredStarters","forEach","pos","position","renderPlayerCard","location","onMouseEnter","style","backgroundColor","onMouseLeave","src","profileImg","team","id","placeholder","Dropdown","text","icon","Menu","scrolling","Item","key","LoadingSpinner","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d487b4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Loading_Spinner.79afee20.gif\";","import React, { useState } from 'react'\r\nimport LoadingSpinner from './images/Loading_Spinner.gif'\r\nimport { Modal, Button, Dropdown } from 'semantic-ui-react'\r\n\r\nconst details = ['type', 'RB', 'QB', 'WR', 'TE', 'FLEX', 'K', 'DEF', 'Total', 'Bench']\r\nconst leagueTypes = [\"Standard\", \"PPR\"]\r\nconst flexPositions = [\"WR\", \"TE\", \"RB\"]\r\nconst allPositions = ['QB', 'WR', 'RB', 'TE', 'FLEX', 'K', 'DEF']\r\nconst specialDetails = ['type', 'Total', 'Bench']\r\n\r\nfunction App() {\r\n\r\n    const [fullPlayerList, setFullPlayerList] = useState([])\r\n    const [showRosterSelect, setShowRosterSelect] = useState(false)\r\n    const [filteredPlayerList, setFilteredPlayerList] = useState([])\r\n    const [noResults, setNoResults] = useState({search: false, query: ''})\r\n    const [currentRoster, setCurrentRoster] = useState([])\r\n    const [rosterDetails, setRosterDetails] = useState({type: 'Standard', QB: 1, RB: 2, WR: 2, TE: 1, FLEX: 2, DEF: 1, K: 1, Total: 15, Bench: 5})\r\n    const [addedPlayerDetails, setAddedPlayerDetails] = useState({QB: 0, RB: 0, WR: 0, TE: 0, FLEX: 0, DEF: 0, K: 0, Total: 0, Bench: 0})\r\n    //const [step, setStep] = ({playerList: 100})\r\n\r\n    const handleInputChange = e => {\r\n        setNoResults({...noResults, search: false})\r\n        let newList = fullPlayerList.filter(function(player) {\r\n            if (this.count < 10 && player.displayName.toLowerCase().includes\r\n                (e.currentTarget.value.toLowerCase()))\r\n                {this.count ++\r\n                return true}\r\n        }, {count: 0})\r\n        if (newList.length === 0) {\r\n            setNoResults({...noResults, search: true, query: e.currentTarget.value})\r\n        }\r\n        setFilteredPlayerList(newList)\r\n    }\r\n    \r\n    const renderInputForm = () => {\r\n        return (\r\n            <div className = \"ui form\">\r\n                <input className = \"ui input\"\r\n                    placeholder=\"Begin typing a player name\"\r\n                    type=\"text\"\r\n                    onChange={handleInputChange}\r\n                >\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const loadPlayerList = async () => {\r\n        try {\r\n            let playerList = await fetch('http://127.0.0.1:8000/players/loadInitial')\r\n            let playerListJson = await playerList.json()\r\n            setFullPlayerList(playerListJson)\r\n        } catch(e) {\r\n            console.warn(e)\r\n        }\r\n\r\n    }\r\n    const renderRosterSelect = () => {\r\n\r\n        return (\r\n            <Modal\r\n              onClose={() => setShowRosterSelect(false)}\r\n              onOpen={() => setShowRosterSelect(true)}\r\n              open={showRosterSelect}\r\n              trigger={<Button primary small>Edit</Button>}\r\n            >\r\n              <Modal.Header>Roster Details</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                    <div className=\"ui form two column grid\">\r\n                        {details.map(detail => {\r\n                        if (detail === \"type\") {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"column four wide\">\r\n                                        {detail}\r\n                                    </div>\r\n                                    <div className=\"column twelve wide\">\r\n                                    {leagueTypes.map(leagueType => {\r\n                                        return (\r\n                                            <button className=\"ui button small blue\"\r\n                                            onClick = {() => \r\n                                                {let newDetails = {...rosterDetails, type: leagueType}\r\n                                                setRosterDetails(newDetails)}\r\n                                            }>{leagueType}</button>\r\n                                        )\r\n                                    })}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"column four wide\">\r\n                                    {detail}\r\n                                </div>\r\n                                <div className=\"column twelve wide\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={rosterDetails[`${detail}`]}\r\n                                        onChange={(e) => {\r\n                                            let newDetails = {...rosterDetails, [detail]: parseInt(e.currentTarget.value)||''}\r\n                                            setRosterDetails(newDetails)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button onClick={() => setShowRosterSelect(false)} positive massive>\r\n                  Save Details\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          )\r\n\r\n\r\n    }\r\n\r\n    const renderFilter = () => {\r\n        return (\r\n            <Dropdown\r\n                text=\"Filter\"\r\n                icon=\"filter\"\r\n                className=\"icon\"\r\n            >\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Menu scrolling>\r\n                        {allPositions.map((pos) => {\r\n                            return (\r\n                                <Dropdown.Item\r\n                                    key={pos}\r\n                                    text={pos}\r\n                                    onClick={() => setFilteredPlayerList(fullPlayerList.filter((player) => player.position === pos))}\r\n                            />\r\n                            )\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        )\r\n\r\n    }\r\n    const modifyRoster = (currentPlayer, action) => {\r\n\r\n        let newRoster = [...currentRoster]\r\n        let newDetails = {...addedPlayerDetails}\r\n        action === \"add\" ? newRoster.push(currentPlayer) : newRoster = newRoster.filter(player => player !== currentPlayer)\r\n        let requiredStarters = 0\r\n        allPositions.forEach(pos => {\r\n            newDetails[`${pos}`] = newRoster.filter(player => player.position === pos).length\r\n            requiredStarters += rosterDetails[`${pos}`]\r\n        })\r\n        newDetails.Total = currentRoster.length\r\n        if (newDetails.Total > requiredStarters) {\r\n            newDetails.Bench = newDetails.Total - requiredStarters\r\n        }\r\n        \r\n        setCurrentRoster(newRoster)\r\n        setAddedPlayerDetails(newDetails)\r\n\r\n    }\r\n\r\n    const renderRosterDetails = () => {\r\n\r\n        return (\r\n                <div className=\"ui left fixed vertical menu\" id=\"rosterDetailsMenu\"\r\n                    style={{\"max-width\": \"20vw\", \"margin-top\": \"6vh\"}}\r\n                >   \r\n                    <div className=\"ui item\" id=\"rosterDetailsHeader\">\r\n                        <h3>Needed:</h3>\r\n                        {renderRosterSelect()}\r\n                    </div>\r\n                    {details.map((pos) => {\r\n                        if (pos !== \"type\") {\r\n                            return (\r\n                                <div className=\"ui item tiny\"\r\n                                style={{backgroundColor: addedPlayerDetails[`${pos}`] >= rosterDetails[`${pos}`] ? \r\n                                \"lightGreen\" : ''}}\r\n                                >\r\n                                    <div className=\"label\">\r\n                                        {pos}\r\n                                    </div>\r\n                                    <div className=\"value\">\r\n                                        <h3>{rosterDetails[`${pos}`] - addedPlayerDetails[`${pos}`] >= 0 ? \r\n                                        rosterDetails[`${pos}`] - addedPlayerDetails[`${pos}`] : 0}</h3>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                    })}\r\n                </div>\r\n        )\r\n    }\r\n\r\n    const renderPlayerCard = (player, location=\"mainSearch\") => {\r\n        if (location===\"mainSearch\") {\r\n            return (\r\n                <div className=\"playerSearchProfile\"\r\n                    onClick={() => {\r\n                        if (currentRoster.includes(player) && currentRoster.length < rosterDetails.Total) {\r\n                            return}\r\n                        modifyRoster(player, 'add')}}\r\n                    onMouseEnter={e => e.currentTarget.style.backgroundColor = \"gainsboro\"}\r\n                    onMouseLeave={e => e.currentTarget.style.backgroundColor = \"\"}\r\n                    >\r\n                    <div>\r\n                        <img\r\n                        className='ui image tiny' \r\n                        src={player.profileImg}/>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">\r\n                            <b>{player.displayName}</b>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            {player.position} {player.team}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )   \r\n        } else {\r\n            return (\r\n                <div className=\"ui segment raised\"\r\n                    onMouseEnter={e => e.currentTarget.style.backgroundColor = \"gainsboro\"}\r\n                    onMouseLeave={e => e.currentTarget.style.backgroundColor = \"\"}\r\n                    >\r\n                    <div>\r\n                        <img\r\n                        className='ui image tiny' \r\n                        src={player.profileImg}/>\r\n                        <i className=\"times icon\"\r\n                            onClick={() => {\r\n                                modifyRoster(player, 'delete')\r\n                            }}>\r\n                        </i>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">\r\n                            {player.displayName}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )  \r\n\r\n        }\r\n    }\r\n\r\n    const renderPlayerList = () => {\r\n\r\n        if (fullPlayerList.length === 0) {\r\n            loadPlayerList()\r\n            return (\r\n                <div className=\"loadingContainer\">\r\n                    <img src={LoadingSpinner}/>\r\n                    <h3>Loading Player List</h3>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (noResults.search) {\r\n            return (\r\n                <div>\r\n                    No matching results for {noResults.query}\r\n                </div>\r\n            )\r\n        }\r\n        if (filteredPlayerList.length === 0) {\r\n            return (\r\n                <div>\r\n                    <div className=\"ui items\">\r\n                        {fullPlayerList.map((player, index) => {\r\n                            if (index < 100)\r\n                                return renderPlayerCard(player)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div className=\"ui items\">\r\n                        {filteredPlayerList.map((player, index) => {\r\n                            return renderPlayerCard(player)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const renderRoster = () => {\r\n        return (\r\n\r\n            allPositions.map((pos) => {\r\n                return ( \r\n                    <div className=\"rosterDisplayContainer\">\r\n                        <div className=\"currentRosterDisplay\"\r\n                        id=\"positionCounter\">\r\n                                <h2>{pos}</h2>\r\n                                <p>{addedPlayerDetails[`${pos}`] > rosterDetails[`${pos}`] ? \r\n                                rosterDetails[`${pos}`] : addedPlayerDetails[`${pos}`]} of {rosterDetails[`${pos}`]} added</p>\r\n                        </div>\r\n                        <div className=\"currentRosterDisplay\">\r\n                        {currentRoster.filter((player) => player.position === pos).map((player) => {\r\n                            return (\r\n                                <div className=\"ui item tiny\">\r\n                                {renderPlayerCard(player, \"sideBar\")}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n   \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"ui text container raised segment\"> \r\n                <div className=\"ui two column grid stackable\"\r\n                    id=\"playerSearch\">\r\n                    <div className=\"column ten wide fullList\">\r\n                        <div>   \r\n                                <h3\r\n                                style={{\"margin-bottom\": \"1vh\", \"text-align\": \"center\"}}\r\n                                >Build/Edit Roster</h3>\r\n                                {renderInputForm()}\r\n                                <div id=\"searchOptions\">\r\n                                    <h3>All Players</h3>\r\n                                    {renderFilter()}\r\n                                </div>\r\n                                {renderPlayerList()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column six wide\">\r\n                        <div id=\"searchOptions\">\r\n                            <h3>My Team:</h3>\r\n                            {renderRosterSelect()}\r\n                        </div>\r\n                        <div id=\"rosterPositionContainer\">\r\n                            {renderRoster()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div className=\"nav\">\r\n    <h1>FFLO</h1>\r\n    </div>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}